generator client {
  provider         = "prisma-client-js"
  output           = "../generated/core"
}

datasource db {
  provider = "postgresql"
  url      = env("CORE_DATABASE_URL")
}
  
model User {
  id          String      @id @default(uuid()) @unique
  name        String
  email       String      @unique
  password    String
  refreshToken String?
  role        Role        @default(USER)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  projects    Project[]   @relation("ProjectOwner")
  tasks       Task[]      @relation("TaskAssignee")
  userProjects UserProject[]
}

model Project {
  id          String      @id @default(uuid()) @unique
  title       String
  description String?
  status      String
  deadline    DateTime
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  ownerId     String
  owner       User        @relation("ProjectOwner", fields: [ownerId], references: [id], onDelete: Cascade)
  tasks       Task[]
  userProjects UserProject[]
}

model Task {
  id          String      @id @default(uuid()) @unique
  title       String
  description String
  status      String
  dueDate     DateTime
  projectId   String
  project     Project     @relation(fields: [projectId], references: [id], onDelete: Cascade)
  assigneeId  String
  assignee    User        @relation("TaskAssignee", fields: [assigneeId], references: [id], onDelete: Cascade)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model UserProject {
  id        String      @id @default(uuid()) @unique
  userId    String
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  projectId String
  project   Project     @relation(fields: [projectId], references: [id], onDelete: Cascade)
  @@unique([userId, projectId])
}


enum Role {
  USER
  ADMIN
}